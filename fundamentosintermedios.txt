1)
function sigma(n){
        var z=0;
        for (var i=n; i>-1; i--){
          z=z+i;
        }
return z;
}
console.log(sigma(4));

2)
function factorial(n){
        var z=1;
        for (var i=n; i>0; i--){
        z=z*i;
        }
return z;
}
console.log(factorial(4));


3)
function fib(x){
	var sum=0;
	arr=[0,1];
	for(var i=2;i<=x;i++){
		sum=arr[i-2]+arr[i-1];
		arr.push(sum);
	}
	return arr[x];
}
console.log(fib(6));


4)
function x(arr){
	if(arr.length>1){
		var y=arr[(arr.length-2)];
	}
	else{
		y='null';
	}
return y;
}
console.log(x([42,true,4,'Liam', 7]));


5)
function x(arr,y){
	if((arr.length)>=y){
		y=arr[(arr.length-3)];
	}
	else{
		y='null';
	}
return y;
}
console.log(x([5,2,3],3));


6)
function x(arr){
	var arrnew=arr;
	var max=0;
	var min=0;
	for(var i=0;i<arrnew.length;i++){
		if(arrnew[i]>max){
			max=arrnew[i];
			}
	}
	for(var i=0;i<arrnew.length;i++){
		if(arrnew[i]<min){
			min=arrnew[i];
			}
	}
	for(var i=0;i<arrnew.length;i++){
		if(arrnew[i]==max){
			arrnew[i]=min;
		}
	}
	max=0;
	for(var i=0;i<arrnew.length;i++){
		if(arrnew[i]>max){
			max=arrnew[i];
		}
	}
return max;
}
console.log(x([11,-4,2,19,9,20]));


7)
function x(arr){
	arrnew=[];
	for(var i=0; i<arr.length; i++){
		arrnew.push(arr[i]);
		if(i%2==0){
			arrnew.push(arr[i]);
		}
	}
return arrnew
}
console.log(x([4, 'Ulysses', 42, false]));




actividad


1)
function fib(n){
	if(n==0 || n==1){
		return n;
	}
	else {
		return fib(n-1)+fib(n-2);
	}
}
console.log(fib(3));


2)
<html>
<head>
	<title>Recursive Fill</title>

	<style type="text/css">
	* {
		margin:0px;
		padding:0px;
	}
	body{
		background-color:black;
	}
	.row div{
		width:50px;
		height:50px;
		display:inline-block;
	}
	.white{
		background-color:white;
	}
	.red{
		background-color:red;
	}
	.yellow{
		background-color:yellow;
	}
	.blue{
		background-color:blue;
	}
	.green{
		background-color:green;
	}


	</style>
</head>
<body>

	<div id='container'></div>

	<script type="text/javascript">
		var world = [
			[1,1,1,0,0,0,0,3,2,2],
			[0,0,0,0,1,0,0,3,3,3],
			[0,2,2,0,1,0,0,0,0,0],
			[0,2,2,0,1,1,1,1,0,0],
			[0,2,2,0,1,0,0,0,0,3],
			[0,2,2,0,1,0,0,3,3,3],
			[0,0,0,0,1,0,0,3,3,3]];

		var mapping = {
			0: 'white',
			1: 'red',
			2: 'yellow',
			3: 'blue',
			4: 'green'
		}

		function drawWorld()
		{
			var output = '';
			for(var i=0; i<world.length; i++)
			{
				output += '<div class="row">';
				for(var j=0; j<world[i].length; j++)
				{
					output += "<div class='"+mapping[world[i][j]]+"'></div>";
				}
				output += '</div>';
			}
			document.getElementById('container').innerHTML = output;
			// console.log(output);
		}

		document.onclick = function(e)
		{
			// console.log('Coordinate Clicked', e.x, e.y);

			var x = Math.floor(e.x/50);
			var y = Math.floor(e.y/50);

			// console.log('X, Y', x, y);
			// console.log('Original Color', world[y][x]);

			console.log('Replace color', world[y][x], ' with color 4 starting from x:', x, 'y:', y);
			fill(x, y, world[y][x], 4);
		}

		function fill(x,y,original_color, color)
		{

			//boundary restrictions
			if(y<0 || y>=world.length || x<0 || x>=10)
				return false;

			//if the current color is NOT the same as the original color you're trying to replace, get out of the fill function
			if(world[y][x] != original_color)
				return false;

			world[y][x] = color;
			fill(x,y-1,original_color, color);
			fill(x,y+1,original_color, color);
			fill(x-1,y,original_color, color);
			fill(x+1,y,original_color, color);


			drawWorld();
			
		}

		drawWorld();

	</script>

</body>
</html>


			